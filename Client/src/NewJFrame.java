import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import java.awt.Component;
import java.awt.HeadlessException;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;

public class NewJFrame extends javax.swing.JFrame {
    int lcount =0 ;
    int ccount = 0 ;
    int bcount = 0;
    String copyboard = "";
    boolean iscut = true;
    ArrayList<String> cmdhistory = new ArrayList<>();
    int cmdhistoryindex = 0;
    public NewJFrame() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        buttonGroup2 = new javax.swing.ButtonGroup();
        filepopup = new javax.swing.JPopupMenu();
        mnutitle = new javax.swing.JMenuItem();
        mnurefresh = new javax.swing.JMenuItem();
        mnureload = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnucut = new javax.swing.JMenuItem();
        mnucopy = new javax.swing.JMenuItem();
        mnupaste = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnudelete = new javax.swing.JMenuItem();
        mnurename = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnudownload = new javax.swing.JMenuItem();
        mnuupload = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnunewfolder = new javax.swing.JMenuItem();
        mnuproperties = new javax.swing.JMenuItem();
        fileChooser = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        btnconnect = new javax.swing.JButton();
        pnlservice = new javax.swing.JPanel();
        cmdshutdown = new javax.swing.JButton();
        cmdrestart = new javax.swing.JButton();
        spnhh = new javax.swing.JSpinner();
        spnmm = new javax.swing.JSpinner();
        spnss = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmdabortshut = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtsysteminfo = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        btnrefex = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        tskrefresh = new javax.swing.JButton();
        prckill = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        opcmd = new javax.swing.JTextArea();
        ipcmd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtconsoleclr = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtchthistory = new javax.swing.JTextArea();
        txtchtbox = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        pnlradio = new javax.swing.JPanel();
        raderr = new javax.swing.JRadioButton();
        radinf = new javax.swing.JRadioButton();
        radwar = new javax.swing.JRadioButton();
        radquest = new javax.swing.JRadioButton();
        radpln = new javax.swing.JRadioButton();
        txtmsgtitle = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtmsgbody = new javax.swing.JTextArea();
        btnsendmsg = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        mnutitle.setText("Title");
        mnutitle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnutitleMouseClicked(evt);
            }
        });
        mnutitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnutitleActionPerformed(evt);
            }
        });
        mnutitle.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mnutitleMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        filepopup.add(mnutitle);

        mnurefresh.setText("Refresh");
        mnurefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnurefreshActionPerformed(evt);
            }
        });
        filepopup.add(mnurefresh);

        mnureload.setText("Reload");
        mnureload.setToolTipText("");
        mnureload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnureloadActionPerformed(evt);
            }
        });
        filepopup.add(mnureload);
        filepopup.add(jSeparator1);

        mnucut.setText("Cut");
        mnucut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnucutActionPerformed(evt);
            }
        });
        filepopup.add(mnucut);

        mnucopy.setText("Copy");
        mnucopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnucopyActionPerformed(evt);
            }
        });
        filepopup.add(mnucopy);

        mnupaste.setText("Paste");
        mnupaste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnupasteActionPerformed(evt);
            }
        });
        filepopup.add(mnupaste);
        filepopup.add(jSeparator2);

        mnudelete.setText("Delete");
        mnudelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnudeleteMouseClicked(evt);
            }
        });
        mnudelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnudeleteActionPerformed(evt);
            }
        });
        filepopup.add(mnudelete);

        mnurename.setText("Rename");
        mnurename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnurenameActionPerformed(evt);
            }
        });
        filepopup.add(mnurename);
        filepopup.add(jSeparator3);

        mnudownload.setText("Download");
        mnudownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnudownloadActionPerformed(evt);
            }
        });
        filepopup.add(mnudownload);

        mnuupload.setText("Upload");
        mnuupload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuuploadActionPerformed(evt);
            }
        });
        filepopup.add(mnuupload);
        filepopup.add(jSeparator4);

        mnunewfolder.setText("New Folder");
        mnunewfolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnunewfolderActionPerformed(evt);
            }
        });
        filepopup.add(mnunewfolder);

        mnuproperties.setText("File / Folder Properties");
        mnuproperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnupropertiesActionPerformed(evt);
            }
        });
        filepopup.add(mnuproperties);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Client");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel3.setText("IP");

        jTextField1.setText("127.0.0.1");

        btnconnect.setText("Connect");
        btnconnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnconnectMouseClicked(evt);
            }
        });
        btnconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnconnectActionPerformed(evt);
            }
        });

        pnlservice.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Shutdown / Restart", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        cmdshutdown.setText("Shutdown");
        cmdshutdown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdshutdownMouseClicked(evt);
            }
        });

        cmdrestart.setText("Restart");
        cmdrestart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdrestartMouseClicked(evt);
            }
        });

        spnhh.setModel(modelhh);

        spnmm.setModel(modelmm);

        spnss.setModel(modelss);

        jLabel4.setText("After");

        jLabel5.setText("HH");

        jLabel6.setText("MM");

        jLabel7.setText("SS");

        cmdabortshut.setText("Abort");
        cmdabortshut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmdabortshutMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlserviceLayout = new javax.swing.GroupLayout(pnlservice);
        pnlservice.setLayout(pnlserviceLayout);
        pnlserviceLayout.setHorizontalGroup(
            pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlserviceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdshutdown, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdrestart, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmdabortshut, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlserviceLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel4)
                .addGap(37, 37, 37)
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnhh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(33, 33, 33)
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnmm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(35, 35, 35)
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(spnss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlserviceLayout.setVerticalGroup(
            pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlserviceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdshutdown)
                    .addComponent(cmdrestart)
                    .addComponent(cmdabortshut))
                .addGap(18, 18, 18)
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlserviceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnhh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnmm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(59, 59, 59))
        );

        txtsysteminfo.setBackground(new java.awt.Color(240, 240, 240));
        txtsysteminfo.setColumns(20);
        txtsysteminfo.setRows(5);
        jScrollPane6.setViewportView(txtsysteminfo);

        jLabel11.setText("Server Information");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(30, 30, 30)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnconnect)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(pnlservice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnconnect))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(pnlservice, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 273, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Remote Server", jPanel3);

        jList1.setModel(list1);
        jList1.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jComboBox1.setModel(combo1);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("<< Back");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setText("jTextField2");

        btnrefex.setText("Refresh");
        btnrefex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnrefexMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnrefexMouseEntered(evt);
            }
        });

        jButton3.setText("Reload");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnrefex, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 834, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnrefex)
                    .addComponent(jButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("File Explorer", jPanel1);

        jList2.setModel(list2);
        jScrollPane2.setViewportView(jList2);

        tskrefresh.setText("Refresh");
        tskrefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tskrefreshMouseClicked(evt);
            }
        });

        prckill.setText("Kill");
        prckill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prckillMouseClicked(evt);
            }
        });

        opcmd.setBackground(new java.awt.Color(51, 51, 51));
        opcmd.setColumns(20);
        opcmd.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        opcmd.setForeground(new java.awt.Color(255, 255, 255));
        opcmd.setRows(5);
        opcmd.setTabSize(5);
        opcmd.setWrapStyleWord(true);
        opcmd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                opcmdKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(opcmd);

        ipcmd.setBackground(new java.awt.Color(51, 51, 51));
        ipcmd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ipcmd.setForeground(new java.awt.Color(255, 255, 255));
        ipcmd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ipcmdKeyPressed(evt);
            }
        });

        jLabel1.setText("Command Input");

        jLabel2.setText("Output Console");

        txtconsoleclr.setText("Clear");
        txtconsoleclr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtconsoleclrMouseClicked(evt);
            }
        });

        jLabel8.setText("Task Manager");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addComponent(tskrefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(prckill, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtconsoleclr, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addComponent(ipcmd))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ipcmd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tskrefresh)
                    .addComponent(prckill)
                    .addComponent(txtconsoleclr))
                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("Task Manager", jPanel2);

        txtchthistory.setColumns(20);
        txtchthistory.setRows(5);
        jScrollPane4.setViewportView(txtchthistory);

        txtchtbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtchtboxKeyPressed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Send Message", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));

        buttonGroup2.add(raderr);
        raderr.setText("Error");

        buttonGroup2.add(radinf);
        radinf.setSelected(true);
        radinf.setText("Information");

        buttonGroup2.add(radwar);
        radwar.setText("Warning");

        buttonGroup2.add(radquest);
        radquest.setText("Question");
        radquest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radquestActionPerformed(evt);
            }
        });

        buttonGroup2.add(radpln);
        radpln.setText("Plain Message");

        javax.swing.GroupLayout pnlradioLayout = new javax.swing.GroupLayout(pnlradio);
        pnlradio.setLayout(pnlradioLayout);
        pnlradioLayout.setHorizontalGroup(
            pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlradioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlradioLayout.createSequentialGroup()
                        .addGroup(pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radwar)
                            .addComponent(raderr))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radinf)
                            .addComponent(radquest))
                        .addGap(81, 81, 81))
                    .addGroup(pnlradioLayout.createSequentialGroup()
                        .addComponent(radpln)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlradioLayout.setVerticalGroup(
            pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlradioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(raderr, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radinf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlradioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radwar)
                    .addComponent(radquest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radpln))
        );

        txtmsgtitle.setText("Enter Message Title");

        txtmsgbody.setColumns(20);
        txtmsgbody.setRows(5);
        txtmsgbody.setText("Enter Message Body");
        jScrollPane5.setViewportView(txtmsgbody);

        btnsendmsg.setText("Send Message");
        btnsendmsg.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsendmsgMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlradio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtmsgtitle, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                .addComponent(btnsendmsg, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlradio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23)
                    .addComponent(txtmsgtitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnsendmsg)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel9.setText("jLabel9");

        jLabel10.setText("Chatting");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtchtbox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtchtbox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Messaging", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED) {
            ccount++;
            //System.out.println("Combo : " + ccount);
            String cur=combo1.getSelectedItem().toString();
            jTextField2.setText(cur);
            MainSocket.senddata("FTP|DIR|" + cur);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        goback();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
                gotodir();
        }
        if (SwingUtilities.isRightMouseButton(evt)){
             String curdir = getlist1item(jList1, list1);
             String delim="";
             
             try {
                if(curdir.substring(curdir.length()-1).equals("/") )  {
                    delim = "Folder :";
                    mnudownload.setEnabled(false);
                }
                else {
                    delim = "File :";
                     mnudownload.setEnabled(true);
                }
                mnutitle.setText(delim +  curdir);
             }
             finally{
                filepopup.show(this.jList1, evt.getX(), evt.getY()); 
             }
            
         }
        else {
         filepopup.setFocusable(true);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER ) {
            gotodir();
        }
        if(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            goback();
        }
    }//GEN-LAST:event_jList1KeyPressed
    public String getcurdir(){
        return jTextField2.getText();
    }
    private void tskrefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tskrefreshMouseClicked
        MainSocket.senddata("TSK|LST|z");
    }//GEN-LAST:event_tskrefreshMouseClicked

    private void prckillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prckillMouseClicked
            String prc = getlist1item(jList2, list2);
            prc = prc.substring(prc.indexOf(":")+1,prc.length());
            killtask(prc);
            list2.remove(jList2.getSelectedIndex());
    }//GEN-LAST:event_prckillMouseClicked

    private void opcmdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opcmdKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER ) {
            String str = opcmd.getText();
            try {
            str = str.substring(0, str.length()-1);
            str = str.substring(str.lastIndexOf("\\n"), str.length());
            }finally {
                System.out.println(str);
            }
        }
    }//GEN-LAST:event_opcmdKeyPressed

    private void ipcmdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ipcmdKeyPressed
        //cmdhistory
        if(evt.getKeyCode() == KeyEvent.VK_ENTER ) {
            if(ipcmd.getText().trim() != "") {
                cmdhistory.add(ipcmd.getText());
                cmdhistoryindex = cmdhistory.size();
                MainSocket.senddata("ALN|CMD|" + ipcmd.getText());
                opcmd.append(">> " + ipcmd.getText() + "\n");
                opcmd.setCaretPosition(opcmd.getDocument().getLength());
                ipcmd.setText("");
            }
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP ) {
            if(cmdhistoryindex <= 0) return;
            cmdhistoryindex--;
            ipcmd.setText(cmdhistory.get(cmdhistoryindex));
        }
        if(evt.getKeyCode() == KeyEvent.VK_DOWN ) {
            if( cmdhistoryindex  >= cmdhistory.size()) return;
            cmdhistoryindex++;
            ipcmd.setText(cmdhistory.get(cmdhistoryindex));
        }
    }//GEN-LAST:event_ipcmdKeyPressed

    private void btnconnectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnconnectMouseClicked
       if(!isconnected()) { 
            ClientA A = new ClientA();
           try {
               A.setUpNetworking(jTextField1.getText().toString());
           } catch (Exception ex) {
               JOptionPane.showMessageDialog(null, "Unable to connect the host / Host unavailable.", "Error", JOptionPane.ERROR_MESSAGE);
               // Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
       else {
            System.out.println("Disconnected");
        }
    }//GEN-LAST:event_btnconnectMouseClicked

    private void radquestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radquestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radquestActionPerformed
    public void incomeChat(String s) {
        txtchthistory.append("Server \t:"+ s);
    }
    private void txtchtboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtchtboxKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && !"".equals(txtchtbox.getText().trim()) ) {
           MainSocket.senddata("MSG|CHT|"+ txtchtbox.getText());
           txtchthistory.append("You \t:"+txtchtbox.getText() + "\n");
           txtchtbox.setText("");
        }
    }//GEN-LAST:event_txtchtboxKeyPressed

    private void btnsendmsgMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsendmsgMouseClicked
        MainSocket.senddata("MSG|MSG|" + txtmsgtitle.getText() + "|" + txtmsgbody.getText() + "|" + getmsgtype ());
    }//GEN-LAST:event_btnsendmsgMouseClicked

    private void mnutitleMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mnutitleMenuKeyPressed
    // TODO add your handling code here:
    }//GEN-LAST:event_mnutitleMenuKeyPressed

    private void mnutitleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnutitleMouseClicked
        JOptionPane.showInputDialog(this, "input");
    }//GEN-LAST:event_mnutitleMouseClicked

    private void cmdshutdownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdshutdownMouseClicked
       MainSocket.senddata("TSK|SHT|S|" + modelhh.getValue().toString() + "|" 
                                        + modelmm.getValue().toString() + "|" 
                                        + modelss.getValue().toString() + "|" 
       );
    }//GEN-LAST:event_cmdshutdownMouseClicked

    private void cmdrestartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdrestartMouseClicked
       MainSocket.senddata("TSK|SHT|R|" + modelhh.getValue().toString() + "|" 
                                        + modelmm.getValue().toString() + "|" 
                                        + modelss.getValue().toString() + "|" 
       );
    }//GEN-LAST:event_cmdrestartMouseClicked

    private void cmdabortshutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmdabortshutMouseClicked
        MainSocket.senddata("TSK|ABT|A");
    }//GEN-LAST:event_cmdabortshutMouseClicked

    private void mnutitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnutitleActionPerformed
        String curitem = jTextField2.getText();
        String curitem2 = getlist1item(jList1,list1);
        if("/".equals(curitem2.substring(curitem2.length()-1)) ) {
            gotodir();
        }
        else
        {
            MainSocket.senddata("TSK|OPN|" + curitem + curitem2);
        }
    }//GEN-LAST:event_mnutitleActionPerformed

    private void mnurefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnurefreshActionPerformed
      refreshdir();
    }//GEN-LAST:event_mnurefreshActionPerformed

    private void mnureloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnureloadActionPerformed
        reload();
    }//GEN-LAST:event_mnureloadActionPerformed

    private void mnudeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnudeleteMouseClicked
        
    }//GEN-LAST:event_mnudeleteMouseClicked

    private void mnudeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnudeleteActionPerformed
        String curitem = getlist1item(jList1,list1);
        int del = 1;
        if(!"".equals(curitem)) {
            del =  JOptionPane.showConfirmDialog(null, "Are you Sure ? ", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
        }
        if(del == 0) {
            MainSocket.senddata("FTP|DEL|" + jTextField2.getText() + curitem);
        }
    }//GEN-LAST:event_mnudeleteActionPerformed

    private void mnurenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnurenameActionPerformed
        String curitem = jTextField2.getText();
        String curitem2 = getlist1item(jList1,list1);
        String ren = "";
        if(!"".equals(curitem)) {
            ren =  JOptionPane.showInputDialog(null, "Enter The name","Rename",JOptionPane.INFORMATION_MESSAGE);
        }
        if(!"".equals(ren) && ren != null)  {
            String oldname = curitem +  curitem2;
            String newname = curitem + ren;
            MainSocket.senddata("FTP|REN|" + oldname + "|" + newname);
        }
    }//GEN-LAST:event_mnurenameActionPerformed
    private void copyitem (String s) {
        String curitem = jTextField2.getText();
        String curitem2 = getlist1item(jList1,list1);
        String path = curitem + curitem2;
        if(!"".equals(path)) {
            copyboard = path;
            if("copy".equals(s)) {
                iscut = false;
            }
            if("cut".equals(s)) {
                iscut = true;
            }
        }
        System.out.println(copyboard);
    }
    private void mnunewfolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnunewfolderActionPerformed
        String curitem = jTextField2.getText();
        String newf = "";
        if(!"".equals(curitem)) {
            newf =  JOptionPane.showInputDialog(null, "Enter The name","New Folder",JOptionPane.INFORMATION_MESSAGE); 
        }
        if(!"".equals(newf.trim())) {
            MainSocket.senddata("FTP|MKD|" + curitem + newf );
        }
        
    }//GEN-LAST:event_mnunewfolderActionPerformed

    private void mnucopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnucopyActionPerformed
        copyitem ("copy");
    }//GEN-LAST:event_mnucopyActionPerformed

    private void mnucutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnucutActionPerformed
        copyitem ("cut");
    }//GEN-LAST:event_mnucutActionPerformed

    private void mnupasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnupasteActionPerformed
        String curitem = jTextField2.getText();
        String curitem2 = getlist1item(jList1,list1);
        String pasteto = curitem + curitem2;
        if(!"".equals(pasteto)) {
            if("/".equals(copyboard.substring(copyboard.length()-1)) ) {
                String newn = copyboard.substring(0,copyboard.length()-1);
                String tonew = newn.substring(newn.lastIndexOf("/")+1,newn.length());
                if(iscut == false){
                    MainSocket.senddata("FTP|CPF|" +copyboard + "|" + pasteto + tonew);
                }
                else {
                    iscut = false;
                    copyboard = "";
                    MainSocket.senddata("FTP|CPF|" +copyboard + "|" + pasteto + tonew);
                }
            }
            else {
                String tonew = copyboard.substring(copyboard.lastIndexOf("/")+1,copyboard.length());
                if(iscut == false){
                    MainSocket.senddata("FTP|CPF|" +copyboard + "|" + pasteto + tonew);
                }
                else {
                    iscut = false;
                    copyboard = "";
                    MainSocket.senddata("FTP|CPF|" +copyboard + "|" + pasteto + tonew);
                }
            }
        }
    }//GEN-LAST:event_mnupasteActionPerformed

    private void btnrefexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefexMouseClicked
        refreshdir();
    }//GEN-LAST:event_btnrefexMouseClicked
    private void refreshdir(){
        MainSocket.senddata("FTP|DIR|" + jTextField2.getText());
    }
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        reload();
    }//GEN-LAST:event_jButton3MouseClicked

    private void btnrefexMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnrefexMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnrefexMouseEntered

    private void mnudownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnudownloadActionPerformed
           String curDir = jTextField2.getText();
           String curitem2 = getlist1item(jList1,list1);
           String DownloadPath = curDir + curitem2;
           final String filename = DownloadPath.substring(DownloadPath.lastIndexOf("/")+1);
           MainSocket.senddata("FTP|TSF|z");
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        try {
            new Thread() {
                @Override
                public void run() {
                    try {
                        String downdir =  System.getProperty("user.dir");
                        downdir = downdir.replace("\\", "/") + "/";
                        
                        ClientA.transfer.recieveFile(downdir + filename);
                    } catch (Exception ex) {
                        System.out.println(ex);
                    }
                }
            }.start();

        } catch (Exception ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        MainSocket.senddata("FTP|DNL|" + DownloadPath);
    }//GEN-LAST:event_mnudownloadActionPerformed

    private void mnuuploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuuploadActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            MainSocket.senddata("FTP|TSF|z");
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            String curDir = jTextField2.getText();
            String curitem2 = getlist1item(jList1,list1);
            String DownloadPath = curDir + curitem2;
            final String filename = DownloadPath.substring(DownloadPath.lastIndexOf("/")+1);

            File file = fileChooser.getSelectedFile();
            String filepath = (file.getAbsolutePath()).replace("\\", "/");
            MainSocket.senddata("FTP|UPL|" + curDir + "|" + filepath );
            System.out.println("Selected File : "  + filepath);
        }
    }//GEN-LAST:event_mnuuploadActionPerformed

    private void mnupropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnupropertiesActionPerformed
        String curDir = jTextField2.getText();
        String curitem2 = getlist1item(jList1,list1);
        MainSocket.senddata("FTP|PRO|" + curDir + curitem2);
    }//GEN-LAST:event_mnupropertiesActionPerformed

    private void txtconsoleclrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtconsoleclrMouseClicked
        opcmd.setText("");
    }//GEN-LAST:event_txtconsoleclrMouseClicked

    private void btnconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnconnectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnconnectActionPerformed
    public void disableControls() {
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);  
        txtsysteminfo.setVisible(false);
        cmdshutdown.setEnabled(false);
        cmdrestart.setEnabled(false);
        cmdabortshut.setEnabled(false);
        spnhh.setEnabled(false);
        spnmm.setEnabled(false);
        spnss.setEnabled(false);
    }
    public void enableControls() {
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setEnabledAt(2, true);
        jTabbedPane1.setEnabledAt(3, true); 
        txtsysteminfo.setVisible(true);
        cmdshutdown.setEnabled(true);
        cmdrestart.setEnabled(true);
        cmdabortshut.setEnabled(true);
        spnhh.setEnabled(true);
        spnmm.setEnabled(true);
        spnss.setEnabled(true);
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       disableControls();
    }//GEN-LAST:event_formWindowOpened
    public void reload() {
        jTextField2.setText("");
        MainSocket.senddata("FTP|DRV|z");
    }
    private String getmsgtype () {
        String msgtype = "INF";
        String entree = buttonGroup2.getSelection().getActionCommand();
        System.out.println(entree + " sandwich"); 
        Component[] components = pnlradio.getComponents();
        for (Component c : components) {
         JRadioButton cb = (JRadioButton) c;
         if (cb.isSelected()) {
                System.out.println(cb.getText());
                switch(cb.getText()) {
                    case "Error" : msgtype = "ERR"; break;
                    case "Information" : msgtype = "INF"; break;
                    case "Warning" : msgtype = "WAR"; break;
                    case "Question" : msgtype = "QUE"; break;
                    case "Plain Message" : msgtype = "PLN"; break;
                    default : msgtype = "INF";
                }
            }
        }
        return msgtype;
    }
    private void gotodir() {
            String curitem = getlist1item(jList1,list1);
            if("/".equals(curitem.substring(curitem.length() - 1)) ) {
                lcount ++;
                //System.out.println("List : " + lcount);
                String curdir = jTextField2.getText() + curitem.substring(0, curitem.length()-1);
                MainSocket.senddata("FTP|DIR|" + curdir ); 
                jTextField2.setText(curdir + "/");
            }
    }
    private void goback () {
       String curtext = jTextField2.getText();
        if(curtext.length() > 3 ) {
            bcount++;
            //System.out.println("Back : "+ bcount);
            String tosend;
            try {
                String curitem  = curtext.substring(0, curtext.length()-1);
                 tosend = curitem.substring(0,curitem.lastIndexOf("/"));
                if(":".equals(tosend.substring(tosend.length()-1))) {
                    tosend = tosend +  "/";
                }
                MainSocket.senddata( "FTP|DIR|" + tosend);
                jTextField2.setText(curitem.substring(0,curitem.lastIndexOf("/")) + "/");
            }
            catch (StringIndexOutOfBoundsException e ) {
                System.out.println(e);
                tosend = "/";
                MainSocket.senddata( "FTP|DIR|" + tosend);
                jTextField2.setText("/");
            }
        }
    }
    private String getlist1item (JList jl, DefaultListModel ll) {
            String curitem = ""; int index;
            index = jl.getSelectedIndex();
            curitem = ((ll.getElementAt(index)).toString()).trim();
        return curitem;
    }
    private void killtask(String s) {
        MainSocket.senddata("TSK|KIL|" + s);
    }
    public boolean isconnected() {
        if("Connect".equals(btnconnect.getText())) {
            return false;
        }
        else {
            return true;
        }
    }
    public void cmdoutput(String s ) {
        opcmd.append(s + "\n");
        opcmd.setCaretPosition(opcmd.getDocument().getLength());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnconnect;
    private javax.swing.JButton btnrefex;
    private javax.swing.JButton btnsendmsg;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton cmdabortshut;
    private javax.swing.JButton cmdrestart;
    private javax.swing.JButton cmdshutdown;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPopupMenu filepopup;
    private javax.swing.JTextField ipcmd;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem mnucopy;
    private javax.swing.JMenuItem mnucut;
    private javax.swing.JMenuItem mnudelete;
    private javax.swing.JMenuItem mnudownload;
    private javax.swing.JMenuItem mnunewfolder;
    private javax.swing.JMenuItem mnupaste;
    private javax.swing.JMenuItem mnuproperties;
    private javax.swing.JMenuItem mnurefresh;
    private javax.swing.JMenuItem mnureload;
    private javax.swing.JMenuItem mnurename;
    private javax.swing.JMenuItem mnutitle;
    private javax.swing.JMenuItem mnuupload;
    private javax.swing.JTextArea opcmd;
    private javax.swing.JPanel pnlradio;
    private javax.swing.JPanel pnlservice;
    private javax.swing.JButton prckill;
    private javax.swing.JRadioButton raderr;
    private javax.swing.JRadioButton radinf;
    private javax.swing.JRadioButton radpln;
    private javax.swing.JRadioButton radquest;
    private javax.swing.JRadioButton radwar;
    private javax.swing.JSpinner spnhh;
    private javax.swing.JSpinner spnmm;
    private javax.swing.JSpinner spnss;
    private javax.swing.JButton tskrefresh;
    private javax.swing.JTextField txtchtbox;
    private javax.swing.JTextArea txtchthistory;
    private javax.swing.JButton txtconsoleclr;
    private javax.swing.JTextArea txtmsgbody;
    private javax.swing.JTextField txtmsgtitle;
    public javax.swing.JTextArea txtsysteminfo;
    // End of variables declaration//GEN-END:variables
DefaultListModel list1 = new DefaultListModel();
DefaultListModel list2 = new DefaultListModel();
DefaultComboBoxModel combo1 = new DefaultComboBoxModel ();
SpinnerNumberModel modelhh = new SpinnerNumberModel(0, 0, 24, 1);
SpinnerNumberModel modelmm = new SpinnerNumberModel(0, 0, 60, 1);
SpinnerNumberModel modelss = new SpinnerNumberModel(10, 0, 60, 1);
}